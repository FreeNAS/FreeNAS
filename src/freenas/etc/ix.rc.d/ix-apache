#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-apache
# BEFORE: apache24
. /etc/rc.freenas

generate_webdav_conf ()
{
    # First check if the webdav service is enabled or not.
    # We do this here as executing a django query just for this one value
    # would be expensive.
    if checkyesno apache24_enable; then
        # The service is enabled so call its python-based config generator
        /usr/local/bin/python /usr/local/libexec/nas/generate_webdav_conf.py
    else
        # webdav is disabled, we now write blanks to the webdav config files
        echo "" > /etc/local/apache24/Includes/webdav.conf
        echo "" > /etc/local/apache24/Includes/webdav-ssl.conf
        # Note: This (below) is a hack. We bind apache to some random port when webdav shares are absent
        # The purpose of this is to facilitate apache to run even in the absence of a secondary config
        # file. Else, it will try to bind to port 80 and fail as nginx is using it and thus spit out a
        # mesaage stating that unable to bind to port, cannot create logs.
        echo "Listen 8080" >> /etc/local/apache24/httpd.conf
    fi

}

ix_apache_start()
{
    generate_webdav_conf
}

name="ix-apache"
start_cmd='ix_apache_start'
stop_cmd=':'
            
load_rc_config $name
run_rc_command "$1"
