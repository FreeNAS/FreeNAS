<%
        def safe_call(*args):
            try:
                val = middleware.call_sync(*args)
            except:
                val = False
            return val

        uri = None
        base = None
        ssl = False
        tls_cacert = None
        tls_reqcert = 'allow'

        ldap = safe_call('datastore.query', 'directoryservice.LDAP')
        if ldap and ldap[0]:
            ldap = ldap[0]
        else:
            ldap = None

        ldap_enabled = ldap['ldap_enable']

        ad = middleware.call_sync('activedirectory.config')

        if ad['enable'] and ad['idmap_backend'] in ["rfc2307", "ldap"]:
            idmap = middleware.call_sync('idmap.get_or_create_idmap_by_domain', 'DS_TYPE_ACTIVEDIRECTORY')
            base = idmap['ldap_base_dn']
            idmap_url = idmap['ldap_url']
            idmap_url = re.sub('^(ldaps?://)', '', idmap_url)
            uri = "%s://%s" % ("ldaps" if idmap['ssl'] == "on" else "ldap", idmap_url)
            if idmap['ssl'] in ('start_tls', 'on'):
                cert = safe_call('certificate.query', [('id', '=', idmap['certificate']['id'])], {'get': True})
                tls_cacert = cert['certificate_path']
                ssl = idmap['ssl']

        elif ldap_enabled and ldap:
            uri = "%s://%s" % ("ldaps" if ldap['ldap_ssl'] == "on" else "ldap", ldap['ldap_hostname'])
            base = ldap['ldap_basedn']

            if ldap['ldap_ssl'] in ("start_tls", "on"):
                cert = safe_call('certificate.query', [('id', '=', ldap['ldap_certificate']['id'])], {'get': True})
                tls_cacert = cert['certificate_path']
                ssl = ldap['ldap_ssl']
%>
% if (ldap_enabled and ldap) or (ad_enabled and ad):
URI ${uri}
BASE ${base}
    % if ssl:
SSL ${ssl}
        % if tls_cacert:
TLS_CACERT ${tls_cacert}
        % endif
TLS_REQCERT allow
    % endif
% endif
