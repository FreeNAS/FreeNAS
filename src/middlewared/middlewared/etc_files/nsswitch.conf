<%
    from middlewared.utils.nss.nss_common import NssModule
    from middlewared.plugins.directoryservices import DSType, DSStatus

    ds_status = middleware.call_sync('directoryservices.status')
    netgroup = ''
    ds = ''

    # An unhealthy directory service cause significant server-wide
    # issues when it is present in the nsswitch in some edge cases.

    # It should only be added if we are reasonably sure we're healthy
    match ds_status['directory_service']:
        case DSType.LDAP.value:
            if ds_status['state'] in (DSStatus.HEALTHY.value, DSStatus.JOINING.value):
                ds = NssModule.SSS.name.lower()
                netgroup = NssModule.SSS.name.lower()
        case DSType.AD.value:
            if ds_status['state'] in (DSStatus.HEALTHY.value, DSStatus.JOINING.value):
                ds = NssModule.WINBIND.name.lower()
        case None:
            pass
        case _:
            # This should never happen and indicates a bug
            middleware.logger.error(
                '%s: unknown directory service. Please file a bug report.'
                ds_status['directory_service']
            )
%>\
#
# nsswitch.conf(5) - name service switch configuration file
#

group: files ${ds}
hosts: files dns
networks: files
passwd: files ${ds}
shells: files
services: files
protocols: files
rpc: files
sudoers: files
netgroup: files ${netgroup}
